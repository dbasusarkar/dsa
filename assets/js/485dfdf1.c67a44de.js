"use strict";(self.webpackChunkdsa=self.webpackChunkdsa||[]).push([[9598],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,b=p["".concat(i,".").concat(d)]||p[d]||c[d]||l;return a?n.createElement(b,o(o({ref:t},m),{},{components:a})):n.createElement(b,o({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(7462),r=a(7294),l=a(6010),o=a(2389),s=a(7392),i=a(7094),u=a(2466);const m="tabList__CuJ",c="tabItem_LNqP";function p(e){var t;const{lazy:a,block:o,defaultValue:p,values:d,groupId:b,className:g}=e,v=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=d??v.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,s.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==f&&!h.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:N}=(0,i.U)(),[w,S]=(0,r.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,u.o5)();if(null!=b){const e=k[b];null!=e&&e!==w&&h.some((t=>t.value===e))&&S(e)}const P=e=>{const t=e.currentTarget,a=T.indexOf(t),n=h[a].value;n!==w&&(x(t),S(n),null!=b&&N(b,String(n)))},C=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},g)},h.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:C,onFocus:P,onClick:P},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":w===t})}),a??t)}))),a?(0,r.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,o.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},140:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),o=a(5162);const s={sidebar_position:9,id:"i-dp",title:"Dynamic Programming",tags:["dp","climbing-stairs","coin-change","longest-common-subsequence","partition-equal-subset-sum","unique-paths"]},i="Dynamic Programming",u={unversionedId:"patterns/i-dp",id:"patterns/i-dp",title:"Dynamic Programming",description:"- Understanding dynamic programming",source:"@site/docs/patterns/i-dp.md",sourceDirName:"patterns",slug:"/patterns/i-dp",permalink:"/dsa/docs/patterns/i-dp",draft:!1,tags:[{label:"dp",permalink:"/dsa/docs/tags/dp"},{label:"climbing-stairs",permalink:"/dsa/docs/tags/climbing-stairs"},{label:"coin-change",permalink:"/dsa/docs/tags/coin-change"},{label:"longest-common-subsequence",permalink:"/dsa/docs/tags/longest-common-subsequence"},{label:"partition-equal-subset-sum",permalink:"/dsa/docs/tags/partition-equal-subset-sum"},{label:"unique-paths",permalink:"/dsa/docs/tags/unique-paths"}],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,id:"i-dp",title:"Dynamic Programming",tags:["dp","climbing-stairs","coin-change","longest-common-subsequence","partition-equal-subset-sum","unique-paths"]},sidebar:"docs",previous:{title:"Bit Manipulation",permalink:"/dsa/docs/patterns/h-bit-manipulation"},next:{title:"Matrices",permalink:"/dsa/docs/patterns/j-matrices"}},m={},c=[{value:"Problems related to dynamic programming",id:"problems-related-to-dynamic-programming",level:2},{value:"\u2197 See LeetCode Problem #70",id:"-see-leetcode-problem-70",level:3},{value:"\u2197 See LeetCode Problem #322",id:"-see-leetcode-problem-322",level:3},{value:"\u2197 See LeetCode Problem #1143",id:"-see-leetcode-problem-1143",level:3},{value:"\u2197 Maximum Subarray",id:"-maximum-subarray",level:3},{value:"\u2197 See LeetCode Problem #416",id:"-see-leetcode-problem-416",level:3},{value:"\u2197 See LeetCode Problem #62",id:"-see-leetcode-problem-62",level:3}],p={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dynamic-programming"},"Dynamic Programming"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Understanding dynamic programming "),(0,r.kt)("li",{parentName:"ul"},"Solved problems are presented in alphabetical order")),(0,r.kt)("h2",{id:"problems-related-to-dynamic-programming"},"Problems related to dynamic programming"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Climbing Stairs (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-70"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/climbing-stairs/"},"\u2197 See LeetCode Problem #70")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Coin Change (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-322"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/coin-change/"},"\u2197 See LeetCode Problem #322")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Longest Common Subsequence (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-1143"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/longest-common-subsequence/"},"\u2197 See LeetCode Problem #1143")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Maximum Subarray (Expand/Collapse) "),(0,r.kt)("h3",{id:"-maximum-subarray"},(0,r.kt)("a",{parentName:"h3",href:"/dsa/docs/algorithms/e-greedy"},"\u2197 Maximum Subarray"))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Partition Equal Subset Sum (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-416"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/partition-equal-subset-sum/"},"\u2197 See LeetCode Problem #416")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Unique Paths (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-62"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/unique-paths/"},"\u2197 See LeetCode Problem #62")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))))}d.isMDXComponent=!0}}]);