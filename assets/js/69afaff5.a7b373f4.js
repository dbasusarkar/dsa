"use strict";(self.webpackChunkdsa=self.webpackChunkdsa||[]).push([[1290],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var l=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=l.createContext({}),d=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=d(e.components);return l.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,b=p["".concat(i,".").concat(m)]||p[m]||c[m]||n;return a?l.createElement(b,s(s({ref:t},u),{},{components:a})):l.createElement(b,s({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var d=2;d<n;d++)s[d]=a[d];return l.createElement.apply(null,s)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>s});var l=a(7294),r=a(6010);const n="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return l.createElement("div",{role:"tabpanel",className:(0,r.Z)(n,s),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var l=a(7462),r=a(7294),n=a(6010),s=a(2389),o=a(7392),i=a(7094),d=a(2466);const u="tabList__CuJ",c="tabItem_LNqP";function p(e){var t;const{lazy:a,block:s,defaultValue:p,values:m,groupId:b,className:h}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=m??g.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),k=(0,o.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,i.U)(),[w,T]=(0,r.useState)(f),j=[],{blockElementScrollPositionUntilNextRender:S}=(0,d.o5)();if(null!=b){const e=y[b];null!=e&&e!==w&&v.some((t=>t.value===e))&&T(e)}const x=e=>{const t=e.currentTarget,a=j.indexOf(t),l=v[a].value;l!==w&&(S(t),T(l),null!=b&&N(b,String(l)))},C=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=j.indexOf(e.currentTarget)+1;a=j[t]??j[0];break}case"ArrowLeft":{const t=j.indexOf(e.currentTarget)-1;a=j[t]??j[j.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,n.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":s},h)},v.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,l.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>j.push(e),onKeyDown:C,onFocus:x,onClick:x},s,{className:(0,n.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":w===t})}),a??t)}))),a?(0,r.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,s.Z)();return r.createElement(p,(0,l.Z)({key:String(t)},e))}},9870:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var l=a(7462),r=(a(7294),a(3905)),n=a(5488),s=a(5162);const o={sidebar_position:10,id:"j-graphs",title:"Graphs",tags:["graphs","disjoint-set","union-find","accounts-merge","alien-dictionary","clone-graph","course-schedule","flood-fill","number-of-islands","rotting-oranges","word-ladder","01-matrix"]},i="Graphs",d={unversionedId:"data-structures/j-graphs",id:"data-structures/j-graphs",title:"Graphs",description:"- Understanding graphs",source:"@site/docs/data-structures/j-graphs.md",sourceDirName:"data-structures",slug:"/data-structures/j-graphs",permalink:"/dsa/docs/data-structures/j-graphs",draft:!1,tags:[{label:"graphs",permalink:"/dsa/docs/tags/graphs"},{label:"disjoint-set",permalink:"/dsa/docs/tags/disjoint-set"},{label:"union-find",permalink:"/dsa/docs/tags/union-find"},{label:"accounts-merge",permalink:"/dsa/docs/tags/accounts-merge"},{label:"alien-dictionary",permalink:"/dsa/docs/tags/alien-dictionary"},{label:"clone-graph",permalink:"/dsa/docs/tags/clone-graph"},{label:"course-schedule",permalink:"/dsa/docs/tags/course-schedule"},{label:"flood-fill",permalink:"/dsa/docs/tags/flood-fill"},{label:"number-of-islands",permalink:"/dsa/docs/tags/number-of-islands"},{label:"rotting-oranges",permalink:"/dsa/docs/tags/rotting-oranges"},{label:"word-ladder",permalink:"/dsa/docs/tags/word-ladder"},{label:"01-matrix",permalink:"/dsa/docs/tags/01-matrix"}],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,id:"j-graphs",title:"Graphs",tags:["graphs","disjoint-set","union-find","accounts-merge","alien-dictionary","clone-graph","course-schedule","flood-fill","number-of-islands","rotting-oranges","word-ladder","01-matrix"]},sidebar:"docs",previous:{title:"Binary-trees",permalink:"/dsa/docs/data-structures/i-binary-trees"},next:{title:"Tries",permalink:"/dsa/docs/data-structures/k-tries"}},u={},c=[{value:"Problems related to graphs",id:"problems-related-to-graphs",level:2},{value:"\u2197 See LeetCode Problem #721",id:"-see-leetcode-problem-721",level:3},{value:"\ud83c\udff7 disjoint-set",id:"-disjoint-set",level:3},{value:"\ud83c\udff7 union-find",id:"-union-find",level:3},{value:"\u2197 See LeetCode Problem #269",id:"-see-leetcode-problem-269",level:3},{value:"\u2197 See LeetCode Problem #133",id:"-see-leetcode-problem-133",level:3},{value:"\u2197 See LeetCode Problem #207",id:"-see-leetcode-problem-207",level:3},{value:"\u2197 See LeetCode Problem #200",id:"-see-leetcode-problem-200",level:3},{value:"\u2197 See LeetCode Problem #994",id:"-see-leetcode-problem-994",level:3},{value:"\u2197 Word Ladder",id:"-word-ladder",level:3},{value:"\u2197 See LeetCode Problem #542",id:"-see-leetcode-problem-542",level:3}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"graphs"},"Graphs"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Understanding graphs "),(0,r.kt)("li",{parentName:"ul"},"Solved problems are presented in alphabetical order")),(0,r.kt)("h2",{id:"problems-related-to-graphs"},"Problems related to graphs"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Accounts Merge (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-721"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/accounts-merge/"},"\u2197 See LeetCode Problem #721")),(0,r.kt)("h3",{id:"-disjoint-set"},"\ud83c\udff7 disjoint-set"),(0,r.kt)("h3",{id:"-union-find"},"\ud83c\udff7 union-find"),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Alien Dictionary (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-269"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/alien-dictionary/"},"\u2197 See LeetCode Problem #269")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Clone Graph (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-133"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/clone-graph/"},"\u2197 See LeetCode Problem #133")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Course Schedule (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-207"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/course-schedule/"},"\u2197 See LeetCode Problem #207")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Flood Fill (Expand/Collapse) "),"### [\u2197 See LeetCode Problem #733](https://leetcode.com/problems/flood-fill/)",(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Number of Islands (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-200"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/number-of-islands/"},"\u2197 See LeetCode Problem #200")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Rotting Oranges (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-994"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/rotting-oranges/"},"\u2197 See LeetCode Problem #994")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null," Word Ladder (Expand/Collapse) "),(0,r.kt)("h3",{id:"-word-ladder"},(0,r.kt)("a",{parentName:"h3",href:"/dsa/docs/data-structures/e-hash-set"},"\u2197 Word Ladder"))),(0,r.kt)("details",null,(0,r.kt)("summary",null," 01 Matrix (Expand/Collapse) "),(0,r.kt)("h3",{id:"-see-leetcode-problem-542"},(0,r.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/01-matrix/"},"\u2197 See LeetCode Problem #542")),(0,r.kt)(n.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))))}m.isMDXComponent=!0}}]);