"use strict";(self.webpackChunkdsa=self.webpackChunkdsa||[]).push([[3556],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return r?a.createElement(b,o(o({ref:t},c),{},{components:r})):a.createElement(b,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(7294),n=r(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,o),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>m});var a=r(7462),n=r(7294),l=r(6010),o=r(2389),s=r(7392),i=r(7094),u=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:r,block:o,defaultValue:d,values:m,groupId:b,className:f}=e,v=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??v.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),y=(0,s.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===d?d:d??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,i.U)(),[T,O]=(0,n.useState)(g),x=[],{blockElementScrollPositionUntilNextRender:N}=(0,u.o5)();if(null!=b){const e=k[b];null!=e&&e!==T&&h.some((t=>t.value===e))&&O(e)}const E=e=>{const t=e.currentTarget,r=x.indexOf(t),a=h[r].value;a!==T&&(N(t),O(a),null!=b&&w(b,String(a)))},P=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;r=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;r=x[t]??x[x.length-1];break}}null==(t=r)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",c)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},f)},h.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>x.push(e),onKeyDown:P,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":T===t})}),r??t)}))),r?(0,n.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,o.Z)();return n.createElement(d,(0,a.Z)({key:String(t)},e))}},2445:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=r(7462),n=(r(7294),r(3905)),l=r(5488),o=r(5162);const s={sidebar_position:11,id:"l-tries",title:"Tries",tags:["tries","implement-trie-prefix-tree","word-break"]},i="Tries",u={unversionedId:"data-structures/l-tries",id:"data-structures/l-tries",title:"Tries",description:"- Understanding tries",source:"@site/docs/data-structures/l-tries.md",sourceDirName:"data-structures",slug:"/data-structures/l-tries",permalink:"/dsa/docs/data-structures/l-tries",draft:!1,tags:[{label:"tries",permalink:"/dsa/docs/tags/tries"},{label:"implement-trie-prefix-tree",permalink:"/dsa/docs/tags/implement-trie-prefix-tree"},{label:"word-break",permalink:"/dsa/docs/tags/word-break"}],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,id:"l-tries",title:"Tries",tags:["tries","implement-trie-prefix-tree","word-break"]},sidebar:"docs",previous:{title:"Graphs",permalink:"/dsa/docs/data-structures/k-graphs"},next:{title:"Algorithms",permalink:"/dsa/docs/category/algorithms"}},c={},p=[{value:"Problems related to tries",id:"problems-related-to-tries",level:2},{value:"\u2197 See LeetCode Problem #208",id:"-see-leetcode-problem-208",level:3},{value:"\u2197 See LeetCode Problem #139",id:"-see-leetcode-problem-139",level:3}],d={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tries"},"Tries"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Understanding tries "),(0,n.kt)("li",{parentName:"ul"},"Solved problems are presented in alphabetical order")),(0,n.kt)("h2",{id:"problems-related-to-tries"},"Problems related to tries"),(0,n.kt)("details",null,(0,n.kt)("summary",null," Implement Trie (Prefix Tree) (Expand/Collapse) "),(0,n.kt)("h3",{id:"-see-leetcode-problem-208"},(0,n.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/implement-trie-prefix-tree/"},"\u2197 See LeetCode Problem #208")),(0,n.kt)(l.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null," Word Break (Expand/Collapse) "),(0,n.kt)("h3",{id:"-see-leetcode-problem-139"},(0,n.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/word-break/"},"\u2197 See LeetCode Problem #139")),(0,n.kt)(l.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:"showLineNumbers",showLineNumbers:!0},'public class Solution {\n    public static void main(String[] args) {\n        System.out.println("Hello, world!");\n    }\n}\n'))))))}m.isMDXComponent=!0}}]);